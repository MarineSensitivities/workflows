---
title: "github_mgt"
---

## Apply label across repositories

* [gh](https://gh.r-lib.org/#post-patch-put-and-delete-requests) R package for interacting with Github API
* [Github API: Issues / Labels](https://docs.github.com/en/rest/issues/labels?apiVersion=2022-11-28)

```{r}
librarian::shelf(
  dplyr, fs, gitcreds, gh, glue, knitr, listviewer, tidyjson,
  quiet = T)

org <- "MarineSensitivities"

lbls_custom <- list(
  list(
    name = "spatial-units",
    description = "spatial units for analysis and comparison, e.g. regions, planning areas, aliquots, etc.",
    color       = "89E836"))

# get repositories
repos_lst <- gh(glue("GET /orgs/{org}/repos"))
listviewer::jsonedit(repos_lst)

(repos <- vapply(repos_lst, "[[", "", "name"))

# add label (if missing)
for (lbl in lbls_custom){ # lbl = lbls_custom[[1]]
  
  print(glue("adding label {lbl$name} to {length(repos)} repositories"))
      
  for (repo in repos){
    repo_lbls <- gh(glue("GET /repos/{org}/{repo}/labels")) |> 
      vapply("[[", "", "name")
  
    if (lbl$name %in% repo_lbls){
      print(glue("  {repo}: exists"))
    } else {
      print(glue("  {repo}: adding"))
      gh(
        glue("POST /repos/{org}/{repo}/labels"),
        name        = lbl$name,
        description = lbl$description,
        color       = lbl$color)
    }
  }
}
# TODO: move to functions in new ecoquants/ghmgt R package
```

## Clone all repos locally

```{r}
for (repo in repos){  # repo = repos[1]
  dir_repo <- glue("~/Github/{org}/{repo}")
  if (!dir_exists(dir_repo)){
    cmd <- glue("git clone https://github.com/{org}/{repo}.git {dir_repo}")
    print(cmd)
    system(cmd)
  }
}

```

## Get repo descriptions

```{r}
gh(glue("GET /orgs/{org}/repos")) |> 
  spread_all() |> 
  as_tibble() |> 
  select(name, description) |>
  arrange(name) |> 
  kable()
```

