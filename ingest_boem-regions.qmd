---
title: "ingest_regions"
editor_options: 
  chunk_output_type: console
---

## Goal

Ingest NEW BOEM polygons (generated with [msens: `/data-raw/ply_boemrgns_ecorgns_planareas_ecoareas.R`](https://github.com/MarineSensitivity/msens/blob/53ede887877f2188970984a5dd0e9df9a1bca9cd/data-raw/ply_boemrgns_ecorgns_planareas_ecoareas.R) in the [`msens`](https://marinesensitivity.org/msens/reference/index.html#data) R package into the PostGIS spatial database for performing spatial joins with species and other data:

- OLD: hierarchy `ply_shlfs` > `ply_rgns` (and `*_s05`
simplifications) that were clipped to US EEZ.

- NEW: hierarchy `ply_boemrgns` > `ply_ecorgns` | `ply_planareas` > 
`ply_ecoareas`, which are the intersection of `ply_ecorgns` and `ply_planareas`.
Created `*_s05` simplifications of each. The new polygons conform to BOEM's
original nomenclature for "OCS Regions", Planning Areas" and "Ecoregions". 
These polygons are not clipped to the US EEZ.

## Load into PostGIS database

```{r}
#| label: load_db

# devtools::install_local("../msens")
librarian::shelf(
  here, leaflet, leaflet.extras, # mapview, 
  marinesensitivity/msens, 
  sf, tibble,
  quiet = T)

source(here("libs/db.R")) # define: con

tbls_old <- c(
  "ply_shlfs", "ply_shlfs_s05", 
  "ply_rgns" , "ply_rgns_s05")

tbls <- c(
  "ply_boemrgns" , "ply_boemrgns_s05",
  "ply_ecorgns"  , "ply_ecorgns_s05",
  "ply_planareas", "ply_planareas_s05",
  "ply_ecoareas" , "ply_ecoareas_s05")
  
redo <- F

# if (any(tbls_old %in% dbListTables(con))){
#   for (tbl in tbls_old){  # tbl = tbls_old[1]
#     dbExecute(con, glue("DROP TABLE IF EXISTS {tbl} CASCADE"))
#   }
# }

if (!all(tbls %in% dbListTables(con))){
  for (tbl in tbls){  # tbl = tbls[2]
    
    o <- get(tbl) |>
      st_wrap_dateline()  # shift from 0:360 to -180:180

    st_write(
      o,
      dsn           = con,
      layer         = tbl,
      driver        = "PostgreSQL",
      layer_options = "OVERWRITE=true")

    # enforce SRID so shows up in tile.marinesensivity.org
    dbExecute(con, glue(
      "SELECT UpdateGeometrySRID('{tbl}','geom',4326);"))
    
    # fix any invalid geometries
    dbExecute(con, glue("UPDATE {tbl} SET geom = ST_MakeValid(geom) WHERE NOT ST_IsValid(geom)"))
    
    # add spatial index for faster queries
    dbExecute(con, glue(
      "CREATE INDEX IF NOT EXISTS {tbl}_geom_idx ON {tbl} USING gist(geom);"))
  }
}
```

## Test spatial data in database

```{r}
#| label: test_db

dbListTables(con)

p <- read_sf(con, "ply_boemrgns_s05") |>
  st_shift_longitude()

msens::ms_basemap() |>
  addPolygons(
    data      = p,
    fillColor = "blue",
    weight      = 2,
    color       = "blue",
    label       = ~boemrgn_name) |> 
  addFullscreenControl()
```
