---
title: "view_maps"
editor_options: 
  chunk_output_type: console
format: 
  html:
    code-fold: show
    code-link: true
execute:
  warning: false
---

The following code chunks demonstrate:

1. The ease of using the `mapView()` function to quickly map spatial data.
1. However, the basemaps are not very good for marine data.
1. The `leaflet()` function has all the flexibility, including with changing the basemap to the best possible Esri Ocean Basemap with labels, but it requires more code to replicate the original `mapView()` map.

Note: the functions in the code are linked to their documentation by using `code-link: true` in the YAML header of this Quarto document.

## `mapView()`

Use North Carolina (NC) Sudden Infant Death Syndrome (SIDS) sample data.  (For details: `?nc`.)

```{r}
library(sf)
library(mapview)

# sample data 
nc <- sf::st_read(system.file("shape/nc.shp", package="sf"), quiet=TRUE) |>
  st_transform(4326)

mapview::mapView(nc, zcol="SID74")
```

## `leaflet()`

* [addProviderTiles work but Esri.OceanBasemap option suddenly does not work · Issue #841 · rstudio/leaflet](https://github.com/rstudio/leaflet/issues/841#issuecomment-1442032371)

```{r}
library(leaflet)

leaflet::leaflet() |>
  # add base: blue bathymetry and light brown/green topography
  addProviderTiles(
    "Esri.OceanBasemap",
    options = providerTileOptions(
      variant = "Ocean/World_Ocean_Base")) |>
  # add reference: placename labels and borders
  addProviderTiles(
    "Esri.OceanBasemap",
    options = providerTileOptions(
      variant = "Ocean/World_Ocean_Reference"))
```

## `ms_basemap()`

This function`msens::`[`ms_basemap()`](https://marinesensitivity.org/msens/reference/ms_basemap.html) is really just a wrapper function for the `leaflet()` example above.

```{r}
library(glue)
library(msens)  # remotes::install_github("MarineSensitivity/msens")

msens::ms_basemap() |> 
  addPolygons(
    data  = nc,
    label = ~NAME,
    popup = ~glue("NAME: {NAME}<br>FIPS: {FIPS}"))
```

## `ms_basemap()` + `popupTable()`

```{r}
library(leafpop)

msens::ms_basemap() |> 
  leaflet::addPolygons(
    data  = nc,
    popup = leafpop::popupTable(nc))
```

## `ms_basemap()` + `popupTable()` + `addLegend()`

`leaflet::`

* [Choropleths](https://rstudio.github.io/leaflet/choropleths.html)
* [Colors](https://rstudio.github.io/leaflet/colors.html)
* [Legends](https://rstudio.github.io/leaflet/legends.html)

`mapview::`

* [mapview advanced controls](https://r-spatial.github.io/mapview/articles/mapview_02-advanced.html) for default values to apply to `leaflet::addPolygons()`

```{r}
# color palette
pal <- colorNumeric(
  palette = "viridis",
  domain  = nc$SID74)

msens::ms_basemap() |> 
  leaflet::addPolygons(
    data         = nc,
    popup        = leafpop::popupTable(nc),
    color        = "black",
    weight       = 1,
    fillColor    = ~pal(SID74),
    fillOpacity  = 0.6) |> 
  leaflet::addLegend(
    pal    = pal,
    values = nc$SID74,
    title  = "nc - SID74")
```



